# ==============================================
# Marin Pest Control Dashboard - Development Nginx Config
# ==============================================
# For local development with hot reload
# Place this in: /etc/nginx/sites-available/dashboard-dev
# Then: sudo ln -s /etc/nginx/sites-available/dashboard-dev /etc/nginx/sites-enabled/
# Test: sudo nginx -t
# Reload: sudo systemctl reload nginx

# WebSocket upgrade handling (for Vite HMR)
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Vite dev server upstream
upstream vite_dev {
    server 127.0.0.1:5173;
    keepalive 64;
}

# Backend dev server upstream
upstream backend_dev {
    server 127.0.0.1:5000;
    keepalive 64;
}

# ==============================================
# Development Site (localhost or local domain)
# ==============================================
server {
    listen 80;
    listen [::]:80;
    server_name localhost dashboard.local dev.wemakemarin.local;
    
    client_max_body_size 20M;

    # Logging for development
    access_log /var/log/nginx/dashboard-dev-access.log;
    error_log /var/log/nginx/dashboard-dev-error.log debug;

    # Proxy to Vite dev server (with HMR support)
    location / {
        proxy_pass http://vite_dev;
        proxy_http_version 1.1;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for HMR (Hot Module Replacement)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Disable buffering for better HMR performance
        proxy_buffering off;
        proxy_cache off;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API routes to backend
    location /api/ {
        proxy_pass http://backend_dev;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (for Socket.io if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Development settings
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check
    location /health {
        proxy_pass http://backend_dev/health;
        access_log off;
    }

    # CORS headers for development (permissive)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    
    # Handle preflight
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }
}

# ==============================================
# Optional: Separate API endpoint for development
# ==============================================
server {
    listen 80;
    listen [::]:80;
    server_name api.localhost api.dashboard.local;
    
    client_max_body_size 20M;

    # All requests to backend
    location / {
        proxy_pass http://backend_dev;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        proxy_buffering off;
        
        # Permissive CORS for development
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}

